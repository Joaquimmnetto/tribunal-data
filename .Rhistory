ggplot() + geom_boxplot(aes(x = factor(1), y = dep_delay), width = 0.1) + coord_flip()
flights %>% select(flight, dep_delay) %>% filter(dep_delay > 0) %>% arrange(desc(dep_delay)) %>%
ggplot() + geom_boxplot(aes(x = factor(1), y = dep_delay), width = 0.1) + coord_flip()
flights %>% select(flight, dep_delay) %>% filter(dep_delay > 0) %>% arrange(desc(dep_delay)) %>%
ggplot() + geom_boxplot(aes(x = factor(1), y = dep_delay), width = 0.1) + coord_flip()
flights %>% select(contains("dep"), contains("arr"))
flights %>% select(contains("dep"), contains("arr"), !contains("sched"))
flights %>% select(contains("dep"), contains("arr"))
flights %>% select(starts_with("dep"), starts_with("arr"))
flights %>% starts_with("dep")
names(flights) %>% starts_with("dep")
flights %>% select(starts_with("dep"), starts_with("arr"))
?flights
flights %>% select(dep_time, arr_time)
flights %>% mutate(sched_time = dep_time + dep_delay) %>% select(sched_time, sched_dep_time)
flights %>% mutate(sched_time = dep_time + dep_delay) %>% select(starts_with("dep"), sched_time, sched_dep_time)
flights %>% mutate(sched_time = dep_time + dep_delay) %>% select(starts_with("dep"), sched_time, sched_dep_time)
flights %>% mutate(sched_time = dep_time - dep_delay) %>% select(starts_with("dep"), sched_time, sched_dep_time)
flights %>% mutate(sched_time = dep_time - dep_delay) %>% select(starts_with("dep"), sched_time, sched_dep_time)
sched <- flights %>% mutate(sched_time = dep_time - dep_delay) %>% select(starts_with("dep"), sched_time, sched_dep_time)
sum(sched$sched_time != sched$sched_dep_time)
sum(complete.cases(sched$sched_time != sched$sched_dep_time))
sum(complete.cases(sched$sched_time != sched$sched_dep_time)) / sum(complete.cases(sched))
sum(sched[complete.cases(sched$sched_time != sched$sched_dep_time)]) / sum(sched[complete.cases(sched)])
?complete.cases
sum(sched[complete.cases(sched$sched_time != sched$sched_dep_time)], ) / sum(sched[complete.cases(sched), ])
sched
sched
complete.cases(sched)
sched[complete.cases(sched), ]
sum(sched[complete.cases(sched) & sched$sched_time != sched$sched_dep_time, ]) / sum(sched[complete.cases(sched), ])
sum(sched[complete.cases(sched) & sched$sched_time == sched$sched_dep_time, ]) / sum(sched[complete.cases(sched), ])
sum(sched[complete.cases(sched) & sched$sched_time != sched$sched_dep_time, ]) / sum(sched[complete.cases(sched), ]) +
sum(sched[complete.cases(sched) & sched$sched_time == sched$sched_dep_time, ]) / sum(sched[complete.cases(sched), ])
na.omit(sched)
?na.omit
x <- data.frame(x1 = c(10, 20, 30), x2 = c(100, NA, 300))
x
na.omit(x)
x[3, x1] <- NA
x[3, x$x1] <- NA
x[3, "x1"] <- NA
x
na.omit(x)
na.omit(x)
x
na.omit(x)
x[complete.cases(x), ]
flights %>% select(dep_time)
flights %>% select(dep_time) %>% ggplot() + geom_histogram(aes(x = dep_time))
flights %>% select(dep_time) %>% ggplot() + geom_histogram(aes(x = dep_time), width = 0.9)
flights %>% select(dep_time) %>% ggplot() + geom_histogram(aes(x = dep_time))
max(flights$dep_time)
max(flights$dep_time, na.rm = T)
800/60
1800/60
2400/60
flights %>% mutate(arr_dep = arr_time - dep_time) %>% select(arr_dep, airtime)
flights %>% mutate(arr_dep = arr_time - dep_time) %>% select(arr_dep, air_time)
rm(sched)
flights %>% mutate(arr_dep = arr_time - dep_time) %>% select(arr_dep, air_time)
flights %>% transmute(arr_dep = arr_time - dep_time, air_time = air_time)
flights %>% transmute(arr_dep = arr_time - dep_time)
flights %>% transmute(arr_dep = arr_time - dep_time, air_time = air_time)
flights %>% transmute(arr_dep = arr_time - dep_time, air_time = air_time)
?flights
head(flights[dep_time == NA, ], 10)
head(flights[flights$dep_time == NA, ], 10)
head(flights[flights$dep_time == NA, ], 1:5)
head(flights[flights$dep_time == NA, 1:5])
head(flights[flights$dep_time == NA, c("flight", "dep_time")])
head(flights[flights$dep_time == NA, ], 10)
head(flights[flights$dep_time == NA, ], 10)
head(flights[flights$arr_time == NA, ], 10)
rm(x)
View(flights)
head(flights[is.na(flights$dep_time), ], 10)
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n())
flights %>% group_by(day) %>% filter(is.na(dep_time))
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n())
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n()) %>% ggplot(aes(x = day, y = cancelled)) + geom_point()
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n()) %>% ggplot(aes(x = day, y = cancelled)) + geom_bar()
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n()) %>% ggplot(aes(x = day, y = cancelled)) + geom_point()
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n()) %>% ggplot(aes(x = day, y = cancelled)) + geom_line()
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n()) %>% ggplot(aes(x = day, y = cancelled)) + geom_point + geom_line()
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n()) %>% ggplot(aes(x = day, y = cancelled)) + geom_point() + geom_line()
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n())
flights %>% group_by(day) %>% mutate(prop = is.na()/n()) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n())
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n())
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n())
flights %>% group_by(day) %>% summarize(prop = is.na(.))
flights %>% group_by(day) %>% summarize(prop = is.na(.)/n()
)
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n())
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n())
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n())
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n(), prop = n()/n(flights))
?count
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n(), prop = n()/count(flights))
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n(), prop = n()/nrow(flights))
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n(), prop = 100 * n()/nrow(flights))
flights %>% group_by(day) %>% filter(is.na(dep_time)) %>% summarize(cancelled = n(), prop = 100 * n()/nrow(flights), avg_delay = mean(arr_delay, na.rm = T))
flights %>% group_by(day) %>% summarize(cancelled = sum(is.na(dep_time)), prop = 100 * sum(is.na(dep_time))/nrow(flights), avg_delay = mean(arr_delay, na.rm = T))
cancelled.summ <- flights %>% group_by(day) %>% summarize(cancelled = sum(is.na(dep_time)), prop = 100 * sum(is.na(dep_time))/nrow(flights), avg_delay = mean(arr_delay, na.rm = T))
cancelled.summ
cancelled.summ %>% ggplot(aes(x = prop, y = avg_delay)) + geom_point() + geom_lines()
cancelled.summ %>% ggplot(aes(x = prop, y = avg_delay)) + geom_point() + geom_line()
cancelled.summ %>% ggplot(aes(x = prop, y = avg_delay)) + geom_point() + geom_smooth(se = FALSE)
cancelled.summ
cancelled.summ %>% ggplot(aes(x = prop, y = avg_delay)) + geom_point() + geom_smooth(se = FALSE)
search()
library(dplyr)
f <- function(d, x) { d[x] }
d <- data.frame(a = c(1, 2, 3), b = c(10, 20, 30))
f(d, c(1,2))
d <- data.frame(a = c(1, 2, 3), b = c(10, 20, 30), c = c(100, 200, 300))
f(d, c(1,2))
f(d, c(1,2, 3))
d
d %>% f(c(1, 2))
d %>% f(c(1))
rm(list = ls())
x <- c(T, F, T, T, F)
which(x)
unwhich <- function(x, n) { out <- rep_len(FALSE, n); out[x] <- TRUE; return out}
unwhich <- function(x, n) { out <- rep_len(FALSE, n); out[x] <- TRUE; return out; }
rep_len(1, 20)
unwhich <- function(x, n) { out <- rep_len(FALSE, n); out[x] <- TRUE; out}
unwhich <- function(x, n) { out <- rep_len(FALSE, n); out[x] <- TRUE; return(out) }
x <- c(T, F, T, T, F)
which(x)
unwhich <- function(x, n) { out <- rep_len(FALSE, n); out[x] <- TRUE; return(out) }
unwhich(which(x))
unwhich(which(x, len(x)))
unwhich(which(x, length(x)))
unwhich(which(x), len(x)))
unwhich(which(x), len(x))
unwhich(which(x), length(x))
x <- c(T, F, T, T, F)
which(x)
unwhich <- function(x, n) { out <- rep_len(FALSE, n); out[x] <- TRUE; return(out) }
unwhich(which(x), length(x))
source('~/compras.R')
source('~/compras.R')
source('~/compras.R')
head(compras.raw)
head(compras.raw, 10)
head(compras.raw, 10)
head(compras.raw, 10)
source('~/compras.R')
source('~/compras.R')
source('~/compras.R')
compras.raw
head(compras.raw)
table(compras.raw)
l
clear
head(compras.raw)
summary(compras.raw)
plot(compras.raw)
head(compras.raw[, -1])
head(compras.raw[, -1])
head(compras.raw)
head(compras.raw[, -ncol(compras.raw)])
head(compras.raw[, -ncol(compras.raw)])
corr(compras.raw[1], compras.raw[2])
cor(compras.raw[1], compras.raw[2])
cor(compras.raw[1], compras.raw[3])
cor(compras.raw)
summary(compras.raw)
mean(compras.raw)
colMeans(compras.raw)
apply(compras.raw, 2, mean)
colMeans(compras.raw)
str(colMeans(compras.raw))
unlist(colMeans(compras.raw))
unname(unlist(colMeans(compras.raw)))
d <- data.frame(itens = names(compras.raw), freq = apply(compras.raw, 2, mean))
d
rownames(d) <- NULL
d
d
ggplot(data = d, aes(x = itens, y = freq)) + geom_bar()
library(ggplot2)
ggplot(data = d, aes(x = itens, y = freq)) + geom_bar()
ggplot(data = compras.raw, aes(x = itens, y = freq)) + geom_bar(stat = "identity")
ggplot(data = d, aes(x = itens, y = freq)) + geom_bar(stat = "identity")
(ggplot(data = d, aes(x = itens, y = freq)) + geom_bar(stat = "identity")_
(ggplot(data = d, aes(x = itens, y = freq)) + geom_bar(stat = "identity"))
compras.raw[, c(5, 6)]
compras.raw["Coca Light" == TRUE | "Coca" == TRUE, c(5, 6)]
compras.raw["Coca Light" == TRUE, c(5, 6)]
sum(compras.raw[, 5])
sum(compras.raw[, 5])/nrow(compras.raw)
sum(compras.raw[, 1])/nrow(compras.raw)
str(compras.raw)
dim(compras.raw)
rules1510
str(rules1510)
print(rules1510)
plot(rules1510)
library(arulesViz)
plot(rules1550, method = "graph", interactive = T, shading = NA)
plot(rules1550, method = "graph", interactive = F, shading = NA)
rm(list = ls())
p <- c(0.5, 0.5, 0.5)
w <- c(0.5, 0.5, 0.5)
p*w
p %*% w
str(p %*% w)
y <- function(x1, x2) { 2*x1 +3*x2 + 5 }
d <- c(y(1, 2), y(2.5, 5), y(10, 20))
d
X <- matrix(c(1, 2, 2.5, 5, 10, 20), nrow = 3, byrow = T)
X
X <- cbind(c(1, 1, 1), X)
X
solve(t(X) %*% X) %*% t(X) %*% d
d <- c(y(1, 2), y(2, 5), y(15, 20))
X <- matrix(c(1, 1, 2, 1, 2, 5, 1, 15, 20), nrow = 3, byrow = T)
D
d
X
solve(t(X) %*% X) %*% t(X) %*% d
X[1, ]
X[1, , drop = F]
X[1, , drop = F] %*% t(X[1, , drop = F])
t(X[1, , drop = F]) %*% X[1, , drop = F]
t(X[1, , drop = F]) %*% X[1, , drop = F] + t(X[2, , drop = F]) %*% X[2, , drop = F] + t(X[3, , drop = F]) %*% X[3, , drop = F]
R <- t(X[1, , drop = F]) %*% X[1, , drop = F] + t(X[2, , drop = F]) %*% X[2, , drop = F] + t(X[3, , drop = F]) %*% X[3, , drop = F]
R
R / 3
R <- R / 3
p <- ((t(X[1, , drop = F]) * d[1]) + (t(X[2, , drop = F]) * d[2]) + (t(X[3, , drop = F]) * d[3]))/3
p
solve(R) %*% p
rm(list = ls())
sign(-1)
sign(-10)
sign(1)
sign(10)
sign(0)
w = c(1, 2, 3)
d <- data.frame(x = c(10, 20, 30), y = (100, 200, 300))
d <- data.frame(x = c(10, 20, 30), y = c(100, 200, 300))
w
d
d <- data.frame(x = c(1, 2), y = c(10, 20), z = c(100, 200))
d
d
x
w
w * d
w * d[1, ]
w %*% d[1, ]
w * d[1, ]
d[1, ]
w .* d[1, ]
w * c(1,2,3)
d[1, ]
w * d[1, ]
x
w
sum(w * d[1, ])
sum(w * d[1, ])
d
sum(w * d[2, ])
source('~/perceptron.R')
source('~/perceptron.R')
rm(list = ls())
source('~/perceptron.R')
data.or <- data.frame(x1 = c(-1, -1, 1, 1), x2 = c(-1, 1, -1, 1), d = c(-1, 1, 1, 1))
w.or <- cmp121.perceptron(data.or)
w.or
source('~/perceptron.R')
w.or <- cmp121.perceptron(data.or)
paste("x", "y")
paste0("x", "y")
paste0(names(data.or), "x")
sapply(names(data.or), paste0, "x")
sapply(unname(names(data.or)), paste0, "x")
unname(sapply(names(data.or), paste0, "x"))
paste0(data.or, "X")
paste0(names(data.or), "X")
paste0("X", names(data.or))
source('~/perceptron.R')
w.or <- cmp121.perceptron(data.or)
source('~/perceptron.R')
w.or <- cmp121.perceptron(data.or)
source('~/perceptron.R')
source('~/perceptron.R')
w.or <- cmp121.perceptron(data.or)
source('~/perceptron.R')
w.or <- cmp121.perceptron(data.or)
w.or
source('~/perceptron.R')
w.or
w.or <- cmp121.perceptron(data.or)
w.or
source('~/perceptron.R')
w.or <- cmp121.perceptron(data.or, learning.rate = 10)
w.or <- cmp121.perceptron(data.or)
w.or
w.or <- cmp121.perceptron(data.or, learning.rate = 10)
w.or
w.or <- cmp121.perceptron(data.or, learning.rate = 1)
w.or
c(1, -1, 1) * w.or
sign(c(1, -1, 1) * w.or)
sign(sum(c(1, -1, 1) * w.or))
data.and <- data.frame(x1 = c(-1, -1, 1, 1), x2 = c(-1, 1, -1, 1), d = c(-1, -1, -1, 1))
w.and <- cmp121.perceptron(data.and)
w.and
sign(sum(c(1, -1, 1) * w.and))
sign(sum(c(1, -1, -1) * w.and))
sign(sum(c(1, -1, 1) * w.and))
sign(sum(c(1, 1, -1) * w.and))
sign(sum(c(1, 1, 1) * w.and))
source('~/perceptron.R')
library(ISLR)
data(Smarket)
names(Smarket)
dim(Smarket)
summary(Smarket)
str(Smarket)
cor(Smarket)
cor(Smarket[, -9])
plot(Smarket)
plot(Volume, data = Smarket)
plot(Smarket$Volume)
attach(Smarket)
plot(Volume)
glm.fit <- glm(Direction ~ Lag1 + Lag2 + Lag3 + Lag4 + Lag5 + Volume, data = Smarket, family = binomial)
summary(glm.fit)
coef(glm.fit)
summary(glm.fit)$coef
glm.probs = predict(glm.fit, type = "response")
glm.probs[1:10]
contrasts(Direction)
setwd("~/tribunaldb/")
load("d41d8cd9.RData")
head(matchs, 20)
head(reason_by_team)
library(ggplot2)
library(dplyr)
library(tidyr)
head(reason_by_team)
reason_by_team %>% group_by(most_common_report_reason) %>% ggplot(aes(x = most_common)) + geom_bar()
reason_by_team %>% group_by(most_common_report_reason) %>% ggplot(aes(x = most_common_report_reason])) + geom_bar()
reason_by_team %>% group_by(most_common_report_reason) %>% ggplot(aes(x = most_common_report_reason)) + geom_bar()
reason_by_team %>% group_by(most_common_report_reason)
reason_by_team %>% group_by(most_common_report_reason) %>% summarize(count = sum(total_reports)) %>% ggplot(aes(x = most_common_report_reason)) + geom_bar()
tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum)
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
head(matchs)
barplot(table(matchs$most_common_report_reason))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(table(matchs$most_common_report_reason))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(table(matchs$most_common_report_reason))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(table(matchs$most_common_report_reason))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(table(matchs$most_common_report_reason))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(table(matchs$most_common_report_reason))
head(matchs)
head(reason_by_team)
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
head(reason_by_team)
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(table(matchs$most_common_report_reason))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(table(matchs$most_common_report_reason))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(table(matchs$most_common_report_reason))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(table(matchs$most_common_report_reason))
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
barplot(table(matchs$most_common_report_reason))
tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum)
table(matchs$most_common_report_reason)
20486/13964
8507/7446
barplot(table(matchs$most_common_report_reason))
tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum)
barplot(tapply(reason_by_team$total_reports, reason_by_team$most_common_report_reason, FUN=sum))
(1.47-1.14)/(1.14)
head(players)
levels(players$outcome)
plot(players$kill, players$gold)
ggplot(data = players, aes(x = kill, y = gold)) + geom_point() + geom_smooth()
ggplot(data = players, aes(x = kill, y = gold)) + geom_point() + geom_smooth(method = "lm")
head(players)
head(players)
names(players)
names(players)[3] <- "association"
head(players)
levels(players$association)
players[players$association == "", ]
sum(players$association == "")
793/nrow(players)
head(players)
head(matchs)
players %>% left_join(matchs, by = c("case", "match"))
players.matchs <- players %>% left_join(matchs, by = c("case", "match"))
head(players.matchs)
head(players.matchs[, 1:5])
head(players.matchs[, 1:5], 10)
head(players.matchs[, 1:5], 11)
head(players.matchs[, 1:5], 10)
head(players.matchs[, 1:5], 10)
head(players.matchs[, 1:9], 10)
offenders <- players.matchs %>% select(association = "offender")
offenders <- players.matchs %>% select(association == "offender")
offenders <- players.matchs %>% filter(association == "offender")
head(offenders)
head(offenders[, 1:5])
head(offenders[, 5:10])
head(offenders[, 5:11])
head(offenders[, 5:12])
head(offenders[, 5:13])
barplot(offenders$outcome)
barplot(table(offenders$outcome))
summary(players)
summary(matchs)
boxplot(players$gold)
hist(players$gold)
hist(players$gold,freq=FALSE)
boxplot(players$kill)
hist(players$kill)
hist(players$kill,breaks=1)
hist(players$kill,breaks=50)
ggplot(data=players,aes(x=gold)) + geom_freqpoly()
ggplot(data=players,aes(x=gold)) + geom_density()
ggplot(data=players) + geom_freqpoly(aes(x=kill)) + geom_freqpoly(aes(x=death))
head(players.matchs)
players.ma
players.matchs %>% mutate(kda=(kill+assit)/(death+1))
players.matchs %>% mutate(kda=(kill+assist)/(death+1))
players.matchs <- players.matchs %>% mutate(kda=(kill+assist)/(death+1))
head(players.matchs)
summary(players.matchs)
ggplot(data=players.matchs,aes(x=kda)) + geom_histogram()
players.matchs <- players.matchs %>% mutate(kd=(kill)/(death+1))
summary(players.matchs)
ggplot(data=players.matchs,aes(x=kd)) + geom_histogram()
ggplot(data=players.matchs,aes(x=kd)) + geom_histogram(binwidth = 50)
ggplot(data=players.matchs,aes(x=kd)) + geom_histogram(binwidth = 10)
ggplot(data=players.matchs,aes(x=kd)) + geom_histogram(binwidth = 1)
ggplot(data=players.matchs,aes(x=kd,y=(..count../sum(..count..)))) + geom_histogram(binwidth = 1)
players.matchs %>% filter(kd<1) %>% ggplot(aes(x=kd,y=(..count../sum(..count..)))) + geom_histogram(binwidth = 1)
players.matchs %>% filter(kd<1) %>% ggplot(aes(x=kd,y=(..count../sum(..count..)))) + geom_histogram(binwidth = 0.1)
players.matchs %>% filter(kd<1) %>% ggplot(aes(x=kd,y=(..count../sum(..count..)))) + geom_histogram(binwidth = 0.01)
players.matchs %>% filter(kd<1) %>% ggplot(aes(x=kd,y=(..count../sum(..count..)))) + geom_histogram(binwidth = 0.05)
players.matchs <- players.matchs %>% mutate(ad=(assist)/(death+1))
summary(players.matchs)
players.matchs %>% filter(ad<1) %>% ggplot(aes(x=ad,y=(..count../sum(..count..)))) + geom_histogram(binwidth = 0.05)
players.matchs %>% filter(ad<20) %>% ggplot(aes(x=ad,y=(..count../sum(..count..)))) + geom_histogram(binwidth = 0.05)
players.matchs %>% filter(ad<20) %>% ggplot(aes(x=ad,y=(..count../sum(..count..)))) + geom_histogram(binwidth = 0.5)
players.matchs %>% filter(ad<20,kd<1) %>% ggplot(aes(x=ad,y=(..count../sum(..count..)))) + geom_histogram(binwidth = 0.5)
sum(players.matchs$kda < 1)
sum(players.matchs$kda < 1)/nrow(players.matchs)
ggplot(data=players.matchs,aes(x=association,fill=outcome)) + geom_bar()
attach(players.matchs)
ally.mean  <- mean(players.matchs[association=='ally','gold'])
ally.mean  <- mean(players.matchs[association=='enemy','gold'])
ally.mean  <- mean(players.matchs[association=='ally','gold'])
enemy.mean  <- mean(players.matchs[association=='enemy','gold'])
ally.mean
enemy.mean
allies  <- players.matchs[association=='ally',]
enemies  <- players.matchs[association=='enemy',]
t.test(allies$gold,enemies$gold)
t.test(allies$gold,enemies$kda)
t.test(allies$kda,enemies$kda)
head(allies)
head(players.matchs])
head(players.matchs)
players.matchs %>% filter(outcome='Win') %>% group_by(case,match) %>% ggplot(aes(x=time_played, color=association)) + geom_freqpoly()
players.matchs %>% filter(outcome=='Win') %>% group_by(case,match) %>% ggplot(aes(x=time_played, color=association)) + geom_freqpoly()
players.matchs %>% filter(outcome=='Win') %>% group_by(case,match) %>% ggplot(aes(x=time_played/60, color=association)) + geom_freqpoly()
players.matchs %>% filter(outcome=='Win') %>% group_by(case,match) %>% mean(time_played)
win  <-  players.matchs %>% filter(outcome=='Win') %>% group_by(case,match)
head(win)
win.table  <- players.matchs %>% select(case,match,association,outcome,time_played)
head(win.table)
head(win.table %>% group_by(case,match))
head(unique(win.table))
players.matchs %>% filter(outcome=='Win') %>% group_by(case,match) %>% ggplot(aes(x=time_played/60, color=association)) + geom_freqpoly()
win.table %>% filter(outcome=='Win') %>% group_by(case,match) %>% ggplot(aes(x=time_played/60, color=association)) + geom_freqpoly()
win.table %>% filter(outcome=='Loss') %>% group_by(case,match) %>% ggplot(aes(x=time_played/60, color=association)) + geom_freqpoly()
win.table  <- unique(win.table)
win.table %>% filter(outcome=='Loss') %>% group_by(case,match) %>% ggplot(aes(x=time_played/60, color=association)) + geom_freqpoly()
HEAD(win.table)
head(win.table)
enemy.win  <- win.table %>% filter(association=='enemy',outcome='Win')
enemy.win  <- win.table %>% filter(association=='enemy',outcome=='Win')
mean(enemy.win$time_played)
mean(enemy.win$time_played)/60
ally.win  <- win.table %>% filter(association=='ally',outcome=='Win')
mean(ally.win$time_played)/60
t.test(ally.win$time_played,enemy.win$time_played)
2103-1964
head(win.table)
head(players.matchs)
case.match  <- win.table
rm( win.table)
head(case.match)
save.image("~/tribunaldb/eda.RData")
